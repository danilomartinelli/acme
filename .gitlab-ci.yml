image: node:20
variables:
  CI: "true"
  NX_SKIP_NX_CACHE: "false"

# Cache configuration for faster builds
cache:
  key:
    files:
      - package-lock.json
  paths:
    - node_modules/
    - .nx/cache/

stages:
  - setup
  - lint
  - test
  - build
  - e2e

# Setup stage - install dependencies and setup environment
setup:
  stage: setup
  interruptible: true
  only:
    - main
    - merge_requests
  script:
    - npm ci --legacy-peer-deps
    - npx playwright install --with-deps
  artifacts:
    paths:
      - node_modules/
      - .nx/cache/
    expire_in: 1 hour

# Lint stage - validate code quality and module boundaries
lint:
  stage: lint
  interruptible: true
  only:
    - main
    - merge_requests
  dependencies:
    - setup
  script:
    - npx nx affected --target=lint --base=origin/main --head=HEAD
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "**/*.{ts,tsx,js,jsx,json}"
    - if: $CI_COMMIT_BRANCH == "main"

# Test stage - run unit tests
test:
  stage: test
  interruptible: true
  only:
    - main
    - merge_requests
  dependencies:
    - setup
  script:
    - npx nx affected --target=test --base=origin/main --head=HEAD
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "**/*.{ts,tsx,js,jsx,json}"
        - "**/*.spec.{ts,tsx,js,jsx}"
        - "**/*.test.{ts,tsx,js,jsx}"
    - if: $CI_COMMIT_BRANCH == "main"

# Build stage - compile projects
build:
  stage: build
  interruptible: true
  only:
    - main
    - merge_requests
  dependencies:
    - setup
  script:
    - npx nx affected --target=build --base=origin/main --head=HEAD
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "**/*.{ts,tsx,js,jsx,json}"
        - "**/*.config.{ts,js,json}"
    - if: $CI_COMMIT_BRANCH == "main"

# Typecheck stage - validate TypeScript types
typecheck:
  stage: build
  interruptible: true
  only:
    - main
    - merge_requests
  dependencies:
    - setup
  script:
    - npx nx affected --target=typecheck --base=origin/main --head=HEAD
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "**/*.{ts,tsx}"
        - "**/*.config.{ts,js,json}"
    - if: $CI_COMMIT_BRANCH == "main"

# E2E stage - run end-to-end tests (only on main branch)
e2e:
  stage: e2e
  interruptible: true
  only:
    - main
  dependencies:
    - setup
    - build
  script:
    - npx nx affected --target=e2e --base=origin/main --head=HEAD
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
      allow_failure: true

# Fallback job for when no affected projects are found
no-affected-projects:
  stage: lint
  interruptible: true
  only:
    - main
    - merge_requests
  dependencies:
    - setup
  script:
    - echo "No affected projects found. Skipping CI tasks."
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
